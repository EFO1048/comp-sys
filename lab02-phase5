(gdb) disas phase_5
Dump of assembler code for function phase_5:
   0x0000000000001807 <+0>:	endbr64 
   0x000000000000180b <+4>:	sub    $0x18,%rsp
   0x000000000000180f <+8>:	mov    %fs:0x28,%rax
   0x0000000000001818 <+17>:	mov    %rax,0x8(%rsp)
   0x000000000000181d <+22>:	xor    %eax,%eax
   0x000000000000181f <+24>:	lea    0x4(%rsp),%rcx
   0x0000000000001824 <+29>:	mov    %rsp,%rdx
   0x0000000000001827 <+32>:	lea    0x1bd6(%rip),%rsi        # 0x3404
   0x000000000000182e <+39>:	callq  0x12f0 <__isoc99_sscanf@plt>
   
   // first time we are comparing eax here
   // safe to assume there is two items again in eax
   
   0x0000000000001833 <+44>:	cmp    $0x1,%eax
   0x0000000000001836 <+47>:	jle    0x1892 <phase_5+139>
   
   (gdb) i r eax
   eax            0x2                2 // this must be our next number
   
   0x0000000000001838 <+49>:	mov    (%rsp),%eax
   0x000000000000183b <+52>:	and    $0xf,%eax
   0x000000000000183e <+55>:	mov    %eax,(%rsp)
   0x0000000000001841 <+58>:	cmp    $0xf,%eax
   0x0000000000001844 <+61>:	je     0x1878 <phase_5+113>
   0x0000000000001846 <+63>:	mov    $0x0,%ecx
   0x000000000000184b <+68>:	mov    $0x0,%edx
   0x0000000000001850 <+73>:	lea    0x1969(%rip),%rsi        # 0x31c0 <array.3473>
   0x0000000000001857 <+80>:	add    $0x1,%edx
   0x000000000000185a <+83>:	cltq   // converts long to quad
   0x000000000000185c <+85>:	mov    (%rsi,%rax,4),%eax
   0x000000000000185f <+88>:	add    %eax,%ecx
   0x0000000000001861 <+90>:	cmp    $0xf,%eax
   0x0000000000001864 <+93>:	jne    0x1857 <phase_5+80>
   0x0000000000001866 <+95>:	movl   $0xf,(%rsp)
   0x000000000000186d <+102>:	cmp    $0xf,%edx
   0x0000000000001870 <+105>:	jne    0x1878 <phase_5+113>
   0x0000000000001872 <+107>:	cmp    %ecx,0x4(%rsp)
   0x0000000000001876 <+111>:	je     0x187d <phase_5+118>
   0x0000000000001878 <+113>:	callq  0x1e27 <crash_program>
   0x000000000000187d <+118>:	mov    0x8(%rsp),%rax
   0x0000000000001882 <+123>:	xor    %fs:0x28,%rax
   0x000000000000188b <+132>:	jne    0x1899 <phase_5+146>
   0x000000000000188d <+134>:	add    $0x18,%rsp
   0x0000000000001891 <+138>:	retq   
   0x0000000000001892 <+139>:	callq  0x1e27 <crash_program>
   0x0000000000001897 <+144>:	jmp    0x1838 <phase_5+49>
   0x0000000000001899 <+146>:	callq  0x1250 <__stack_chk_fail@plt>
End of assembler dump.
